// <auto-generated />
using LocationFilter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocationFilter.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200807164326_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("LocationFilter.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Address", "City", "State", "Zip")
                        .IsUnique();

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Old Delhi Market",
                            City = "New Delhi",
                            State = "Delhi",
                            Zip = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Address = "South Beach",
                            City = "Miami",
                            State = "Florida",
                            Zip = "123457"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Fort Lauderdale",
                            City = "Miami",
                            State = "Florida",
                            Zip = "123458"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Fort Worth",
                            City = "Dallas",
                            State = "Texas",
                            Zip = "123459"
                        },
                        new
                        {
                            Id = 5,
                            Address = "North Fort",
                            City = "Miami Beach",
                            State = "Florida",
                            Zip = "123489"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
